<?php
$this->jQuery()->addJavascriptFile(CCSDLIB . "/js/jquery/ui/nestedSortable.js")
    ->addJavascriptFile(CCSDLIB . "/js/wysihtml5-0.js")
    ->addJavascriptFile(CCSDLIB . "/js/bootstrap-wysihtml5.js")
    ->addStylesheet(CCSDLIB . "/css//bootstrap-wysihtml5.css")
    ->addJavascriptFile(CCSDLIB . '/js/jquery/ui/autocomplete.html.js');

$this->layout()->pageDescription = $this->translate("Ajout/suppression de nouvelles pages dans le site")
?>
<style>
.sortable {
	margin: 0;
}

.sortable, .sortable>li ul {
	list-style-type: none;
}

.sortable>li ul {
	border-left: 1px solid #dddddd;
	padding-left: 10px;
}

.sortable>li {
	padding: 10px;
	border-top: 1px solid #dddddd;
}

.sortable ul  li {
	border-top: 1px dotted #dddddd;
}

.sortable>li:hover {
	background: #f5f5f5;
}

.sortable>li td {
	vertical-align: top;
}

#tableHeader {
	margin-bottom: 0px;
}

.placeholder {
	margin: 5px 0px;
	height: 20px;
	background-color: #dff0d8;
	border: 1px solid #d6e9c6;
	-webkit-border-radius: 4px;
	-moz-border-radius: 4px;
	border-radius: 4px;
	-webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.05);
	-moz-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.05);
	box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.05);
}

.ui-nestedSortable-error {
	margin: 0px;
	height: 0px;
	background-color: #ffffff;
	border: 0px;
	box-shadow: inherit;
}

.search-affi {
	margin-bottom: 5px;
}

.label {
	font-size: 100%;
	line-height:1.9;
}
</style>
<?php //Ajout de nouvelles pages ?>
<div class="form-actions">
	<div class="row">
		<div class="col-md-5">
			<select name="type" id="type" class="form-control">
                <?php foreach ($this->pageTypes as $type => $label) {
                    $disabled = '';
                    foreach ($this->pages as $page) {
                        if ($label == get_class($page) && !$page->isMultiple())	 {
                            //La page est déjà ajoutée et non multiple
                            $disabled = ' disabled = "disabled"';
                            break;
                        }
                    }

                    ?>
                    <option value="<?php echo $type; ?>" <?php echo $disabled;?>
					type="<?php echo $label; ?>"><?php echo $this->translate($label); ?></option>
                <?php }?>
            </select>
		</div>
		<div class="col-md-6">
			<button type="button" class="btn btn-default" onclick="addformPage()">
				<i class="glyphicon glyphicon-file"></i>&nbsp;<?php echo $this->translate("Ajouter la page")?></button>
            &nbsp;<?php echo $this->translate("ou")?>&nbsp;
            <button type="button" class="btn btn-default" onclick="addformFolder()">
				<i class="glyphicon glyphicon-folder-open"></i>&nbsp;<?php echo $this->translate("Ajouter un dossier")?></button>
		</div>
	</div>
</div>
<?php //Liste des pages ?>
<form action="<?php echo PREFIX_URL?>website/menu" enctype="multipart/form-data" method="post"
	class="form-horizontal">
	<table class="table table-hover" id="tableHeader">
		<thead>
			<tr>
				<th width="20px"></th>
				<th><?php echo $this->translate("Pages")?></th>
				<th width="70px"><?php echo $this->translate("Actions")?></th>
			</tr>
		</thead>
	</table>
	<ul class="sortable">
    	<?php foreach ($this->order as $key => $value) {
    		$this->i = $key;
    		if (! isset($this->pages[$key])) {
				continue;
			}
			$this->page = $this->pages[$key];
			?>
    		<li id="page_<?php echo $this->i; ?>"
			class="<?php echo $this->page->isFolder() ? '' : 'no-nest'?>">
    			<?php include __DIR__ . "/menu-page.phtml";
    			if (is_array($value) && count($value) > 0) {
					?>
					<ul>
					<?php foreach ($value as $k => $svalue) {
			    		$this->i = $k;
			    		if (! isset($this->pages[$k])) {
							continue;
						}
						$this->page = $this->pages[$k];
						?>
						<li id="page_<?php echo $this->i; ?>"
					class="<?php echo $this->page->isFolder() ? '' : 'no-nest'?>">
							<?php include __DIR__ . "/menu-page.phtml";
                            if (is_array($svalue) && count($svalue) > 0) {
                                ?>
                                <ul>
                                    <?php foreach ($svalue as $sk => $ssvalue) {
                                        $this->i = $sk;
                                        if (! isset($this->pages[$sk])) {
                                            continue;
                                        }
                                        $this->page = $this->pages[$sk];
                                        ?>
                                        <li id="page_<?php echo $this->i; ?>" class="no-nest">
                                            <?php include __DIR__ . "/menu-page.phtml"; ?>
                                        </li>
                                    <?php }?>
                                </ul>
                            <?php }?>
						</li>
						<?php }?>
					</ul>
				<?php }?>
    		</li>
    	<?php } ?>
    </ul>
	<div id="clone" style="display: none;">
		<li class="">
			<div>
				<table width="100%">
					<tr>
						<td width="20px"><i class="glyphicon glyphicon-move"></i></td>
						<td class="page-content"></td>
						<td width="70px">
							<div class="pull-right">
								<a href="javascript:void(0)" onclick="$(this).closest('li').remove();"
									title="<?php echo $this->translate("Supprimer"); ?>"><i class="glyphicon glyphicon-trash"></i></a>
							</div>
						</td>
					</tr>
				</table>
			</div>
		</li>
	</div>
	<div class="form-actions text-center">
		<a href="<?php echo PREFIX_URL?>website/reset"><button type="button"
				class="btn btn-default btn-sm"><?php echo $this->translate('Annuler'); ?></button></a>
		<button type="submit" class="btn btn-primary"><?php echo $this->translate('Enregistrer'); ?></button>
	</div>
</form>
<?php echo $this->confirm("Suppression de la page", "Souhaitez-vous supprimer la page ?")
			->setTrigger('.remove-page')
			->setJsInit('$("#confirm-id").val($(this).closest("li").find("input[type=hidden]").val());')
			->setJsCallback('deletePage();');?>
<script type="text/javascript">

$(document).ready(function(){
	//Tri des pages
	$('ul.sortable').nestedSortable({
		disableNesting: 'no-nest',
		listType: 'ul',
		handle: '.glyphicon-move',
		items: 'li',
		maxLevels: 3,
		opacity: .6,
		placeholder: 'placeholder',
		stop: function(event, ui) {
			$.ajax({
				url: '<?php echo PREFIX_URL?>website/ajaxorder',
				type: 'post',
				data: $('ul.sortable').nestedSortable('serialize')
			});
		}
	});

	//Edition des informations sur une page
	$('.editPage').click(function(){
	    $(this).parents('tr').find('.div-plus').toggle('slow');
	});

	//Création du permalien
	$('.permalien-src').focus(function() {
        createPermalien($(this));
	});
    $('.permalien').blur(function() {
        $(this).val(permalink($(this).val()));
    });
    searchAffi();
    searchCollection();
  });

	function addformPage()
	{
		formNewPage($('#type').val());
	}

	function addformFolder()
	{
		formNewPage('folder');
	}

	function formNewPage(type)
	{
		$.ajax({
			url: "<?php echo PREFIX_URL?>website/ajaxformpage",
			type: 'post',
			data: {'type': type},
			success: function(result){
				if (result != '') {
					var clone = $('#clone>li').clone();
					$('.page-content', clone).html(result);
					$(clone).attr('id', 'page_' + $('input[type="hidden"]', clone).val());
					if (type != 'folder') {
						$(clone).attr('class', 'no-nest');
					}
					$('.permalien-src', clone).blur(function() {
                        createPermalien($(this));
					});
                    $('.permalien', clone).blur(function() {
                        $(this).val(permalink($(this).val()));
                    });


					$('ul.sortable').append(clone);
                    searchAffi();
                    searchCollection();
					jQuery('html,body').animate({scrollTop:jQuery("#page_"+$('input[type="hidden"]', clone).val()).offset().top},1000,'swing');

				}
			}
		});
	}

	function deletePage()
	{
		$.ajax({
			url: "<?php echo PREFIX_URL?>website/ajaxrmpage",
			type: 'post',
			data: {'idx': $('#confirm-id').val()},
			success: function(result){
				$('#type option[type="' + $('#pages_' + $('#pageDelete').val() + '-type').attr('class') + '"]').removeAttr('disabled');
				$('#page_' + $('#confirm-id').val()).remove();
				$('#modalDelete').modal('hide');
			}
		});
	}

    function createPermalien(elem)
    {
        var permalien = $(elem).closest('li').find('.permalien');
        if ($(permalien).val() == '') {
            $(permalien).val(permalink($(elem).val()));
        }
    }

    function searchAffi()
    {
        $('.search-affi').each(function() {



            $('#' + $(this).attr('id')).autocomplete({
                minLength: 2,
                html: true,
                source: function(request, response){
                    $.ajax({
                        url: "/ajax/ajaxsearchstructure",
                        dataType: "json",
                        data: {term: request.term},
                        success: function(data) {
                            response($.map(data.response.docs, function(item) {
                                return {id: item.docid, label: item.label_html}
                            }));
                        }
                    });
                },
                focus: function( event, ui ) {

                    return false;
                },
                select: function( event, ui ) {
                    addAffi('#' + $(this).attr('id'), ui.item.label, ui.item.id);
                    $('#' + $(this).attr('id')).val('');
                    return false;
                }
            });

        });
    }

    function addAffi(elem, label, id)
    {

    	var substr = label.split('<dl>');
		if (substr.length > 1) {
			var labelText = $.parseHTML(substr[0]);
			var labelText = $(labelText).text();
		} else {
			var labelText = label;
		}

    	var text = '<span class="label label-primary">' + labelText + ' <small>(' + id + ')</small>&nbsp;<i class="glyphicon glyphicon-remove" onclick="$(this).parent().remove()"></i>';
        text += '<input type="hidden" name="' + $(elem).attr('name') +'[]" value="' + id + '" />';
        text += '</span><br>';

        $(elem).after(text);
    }

    function searchCollection()
    {
        $('.search-collection').each(function() {

            $('#' + $(this).attr('id')).autocomplete({
                minLength: 2,
                html: true,
                source: function(request, response){
                    $.ajax({
                        url: "/administrate/ajaxsearchcollection",
                        dataType: "json",
                        data: {term: request.term},
                        success: function(data) {
                            response($.map(data, function(item) {
                                return {id: item.id, label: item.label, code: item.code}
                            }));
                        }
                    });
                },
                focus: function( event, ui ) {

                    return false;
                },
                select: function( event, ui ) {
                	addCollection('#' + $(this).attr('id'), ui.item.label, ui.item.id, ui.item.code);
                    $('#' + $(this).attr('id')).val('');
                    return false;
                }
            });

        });
    }


function removeCollectionFilter(id) {
	$('#' + id).remove();
	$('.search-collection').removeAttr("disabled");
}

    function addCollection(elem, label, id, code)
    {

		var labelText = label;
    	var text = '<span id="' + id + '" class="label label-primary">' + labelText + ' <small>(' + code + ')</small>&nbsp;<i class="glyphicon glyphicon-remove" onclick="removeCollectionFilter(' + id + ')"></i>';
        text += '<input type="hidden" name="' + $(elem).attr('name') +'[]" value="' + code + '" />';
        text += '</span>';
        $('.search-collection').attr("disabled", "true");
        $(elem).after(text);

    }
</script>
