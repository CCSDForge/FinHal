<?php

require_once __DIR__ . '/loadHalHeader.php';

$langFile  = APPLICATION_PATH  . "/../library/Thesaurus/languages/fr/jel.php";
$confFile  = APPLICATION_PATH  . "/../library/Thesaurus/jel.json";
$comment   = '// This file is generated by ' . __FILE__ . PHP_EOL . PHP_EOL;

$xmlJel =@ new SimpleXMLElement(file_get_contents('https://www.aeaweb.org/econlit/classificationTree.xml'));

if ($xmlJel) {
    $trad = $json = [];


    foreach ( $xmlJel->classification as $classif ) {
        getChild($classif, '', 0, $trad, $json);
    }
    $header = "<?php".PHP_EOL. $comment . PHP_EOL. "return array (".PHP_EOL;
    $footer = ");";
    // Translation file (In fact: no translation, just label)
    file_put_contents($langFile, $header);
    foreach ($trad as $key => $val) {
        file_put_contents($langFile, '"jel_'.$key.'" => "' . addslashes($val) . '",'.PHP_EOL , FILE_APPEND);
    }
    file_put_contents($langFile, $footer, FILE_APPEND);
    
    // Json file: used for giving the list in select box
    file_put_contents($confFile, json_encode($json));
}

/**
 * $classification est une sous classification Jel
 *
 * @param $classif  SimpleXMLElement //  est un noeud json de sous classification Jel
 * @param $parent   string    // le nom de la classification parente  de $classif
 * @param $trad     string[]  // valeur retourne (contient le libelle de cette classification
 * @param $json               // l'objet futur json (tableau de tableaux)
 * @param $level    int       // niveau de recursivite
 */

function getChild($classif, $parent, $level, &$trad, &$json) {
    $code = (($parent != '')?$parent.'.':'').(string)$classif->code;
    $trad[$code] = $code.' - '.trim(html_entity_decode((string)$classif->description, ENT_QUOTES, 'UTF-8'));

    // Placement dans le tableau json
    $a = explode('.', $parent);
    if ( $level == 0) {
        $t = &$json;
    } elseif ( $level == 1) {
        $t = &$json[$parent];
    } elseif ( $level == 2) {
        $t = &$json[$a[0]][$parent];
    } elseif ( $level == 3) {
        $t = &$json[$a[0]][$a[0].'.'.$a[1]][$parent];
    }
    $t[$code] = [];  // On defini le code (par un tableau, si jamais il y aura un ss code)
    if ( isset($classif->classification) ) {
        foreach ( $classif->classification as $child ) {
            getChild($child, $code, $level+1, $trad, $json);
        }
    }
}